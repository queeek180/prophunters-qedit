-- NOTE: Make sure to sync default changes over to ULX.
GM.VoiceHearTeam = CreateConVar("ph_voice_hearotherteam", 0, {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "Can we hear the voices of opposing teams")
GM.VoiceHearDead = CreateConVar("ph_voice_heardead", 1, {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "Can we hear the voices of dead players and spectators")
GM.RoundLimit = CreateConVar("ph_roundlimit", 6, {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "Number of rounds before mapvote")
GM.RoundTime = CreateConVar("ph_roundtime", 300, {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "Time until props win")
GM.PreRoundTime = CreateConVar("ph_preroundtime", 30, {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "Time until round starts")
GM.PostRoundTime = CreateConVar("ph_postroundtime", 10, {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "Time until next round starts")
GM.HunterDamagePenalty = CreateConVar("ph_hunter_dmgpenalty", 3, {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "Amount of damage a hunter should take for shooting an incorrect prop")
GM.HunterGrenadeAmount = CreateConVar("ph_hunter_smggrenades", 1, {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "Amount of SMG grenades hunters should spawn with")
GM.DeadSpectateRoam = CreateConVar("ph_dead_canroam", 0, {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "Can dead players use the roam spectate mode")
GM.PropsWinStayProps = CreateConVar("ph_props_onwinstayprops", 0, {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "If the props win, they stay on the props team")
GM.PropsSmallSize = CreateConVar("ph_props_small_size", 200, {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "Size that speed penalty for small size starts to apply (0 to disable)")
GM.PropsJumpPower = CreateConVar("ph_props_jumppower", 1.2, {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "Jump power bonus for when props are disguised")
GM.PropsCamDistance = CreateConVar("ph_props_camdistance", 1, {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "The camera distance multiplier for props when disguised")
GM.MapTimeLimit = CreateConVar("ph_map_time_limit", -1, {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "Minutes before declaring the next round to be the last round (-1 to disable)")
GM.PropTpose = CreateConVar("ph_props_tpose", 1, {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "Should props be fully animated or tpose")
GM.PropInitialThirdperson = CreateConVar("ph_props_thirdperson", 1, {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "Should props start in thirdperson") 

GM.TauntMenuPhrase = CreateConVar("ph_taunt_menu_phrase", "TauntMenuPhrase", {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "Phrase shown at the top of the taunt menu")
GM.AutoTauntEnabled = CreateConVar("ph_auto_taunt", 0, {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "1 if auto taunts should be enabled")
GM.AutoTauntMin = CreateConVar("ph_auto_taunt_delay_min", 60, {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "Mininum time to go without taunting")
GM.AutoTauntMax = CreateConVar("ph_auto_taunt_delay_max", 120, {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "Maximum time to go without taunting")
GM.AutoTauntPropsOnly = CreateConVar("ph_auto_taunt_props_only", 1, {FCVAR_ARCHIVE, FCVAR_NOTIFY, FCVAR_REPLICATED, FCVAR_SERVER_CAN_EXECUTE}, "Enable auto taunt for props only")
